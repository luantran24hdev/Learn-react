{"version":3,"sources":["components/Filters/FiltersSlice.js","components/TodoList/TodosSlice.js","redux/store.js","components/Todo/index.js","redux/selector.js","components/TodoList/index.js","components/Filters/index.js","App.js","index.js"],"names":["createSlice","name","initialState","search","status","priorities","reducers","searchFilterChange","state","action","payload","searchFilterByStatus","priorityFilter","addTodo","push","toggleTodo","currentTodo","find","item","id","console","log","completed","store","configureStore","reducer","filters","FiltersSlice","todoList","TodosSlice","priorityColorMapping","High","Medium","Low","Todo","prioriry","dispatch","useDispatch","useState","checked","setChecked","justify","style","marginBottom","opacity","textDecoration","onChange","todoListSlice","actions","color","margin","todosRemainingSelector","createSelector","searchText","filter","todo","length","includes","priority","TodoList","todoName","setTodoName","todoPriority","setPriority","useSelector","height","span","Group","display","compact","value","e","target","defaultValue","Option","label","type","onClick","v4","overflowY","map","Search","Input","Filters","setSearchText","filterStatus","setfilterStatus","filterPriority","setFilterPriority","Paragraph","fontWeight","marginTop","placeholder","sm","mode","allowClear","width","Title","Typography","App","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","fontSize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc471c8c.chunk.js","sourcesContent":["// const initState = {\n//   search: \"\",\n//   status: \"All\",\n//   priorities: [],\n// };\n\n// const filtersReducer = (state = initState, action) => {\n//   switch (action.type) {\n//     case \"filters/searchFilterChange\":\n//       return {\n//         ...state,\n//         search: action.payload,\n//       };\n//     case \"filters/searchFilterByStatus\":\n//       return {\n//         ...state,\n//         status: action.payload,\n//       };\n\n//     case \"filters/priorityFilter\":\n//       return {\n//         ...state,\n//         priorities: action.payload,\n//       };\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default filtersReducer;\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport default createSlice({\n  name: \"filters\",\n  initialState: {\n    search: \"\",\n    status: \"All\",\n    priorities: [],\n  },\n  reducers: {\n    searchFilterChange: (state, action) => {\n      state.search = action.payload;\n    },\n    searchFilterByStatus: (state, action) => {\n      state.status = action.payload;\n    },\n    priorityFilter: (state, action) => {\n      state.priorities = action.payload;\n    },\n  },\n});\n","// const initState = [\n//   { id: 1, name: \"Learn Yoga\", completed: false, priority: \"Medium\" },\n//   { id: 2, name: \"Learn Redux\", completed: true, priority: \"High\" },\n//   { id: 3, name: \"Learn JavaScript\", completed: true, priority: \"Low\" },\n// ];\n\n// const todoListReducer = (state = initState, action) => {\n//   switch (action.type) {\n//     case \"todoList/addTodo\":\n//       return [...state, action.payload];\n//     case \"todoList/toggleTodo\":\n//       return state.map((item) =>\n//         item.id === action.payload\n//           ? { ...item, completed: !item.completed }\n//           : item\n//       );\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default todoListReducer;\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport default createSlice({\n  name: \"todoList\",\n  initialState: [\n    // { id: 1, name: \"Learn Yoga\", completed: false, priority: \"Medium\" },\n    // { id: 2, name: \"Learn Redux\", completed: true, priority: \"High\" },\n    // { id: 3, name: \"Learn JavaScript\", completed: true, priority: \"Low\" },\n  ],\n  reducers: {\n    addTodo: (state, action) => {\n      state.push(action.payload);\n    },\n    toggleTodo: (state, action) => {\n      const currentTodo = state.find((item) => item.id === action.payload);\n      console.log(currentTodo);\n      if (currentTodo) {\n        currentTodo.completed = !currentTodo.currentTodo;\n      }\n    },\n  },\n});\n","// import { createStore } from \"redux\";\n// import rootReducer from \"./reducer\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// const composeEnhancers = composeWithDevTools();\n\n// const store = createStore(rootReducer, composeEnhancers);\n\n// export default store;\n\nimport FiltersSlice from \"../components/Filters/FiltersSlice\";\nimport TodosSlice from \"../components/TodoList/TodosSlice\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nconst store = configureStore({\n  reducer: {\n    filters: FiltersSlice.reducer,\n    todoList: TodosSlice.reducer,\n  },\n});\n\nexport default store;\n","import { Row, Tag, Checkbox } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import { toggleTodo } from \"../../redux/actions\";\r\n\r\nimport todoListSlice from \"../TodoList/TodosSlice\";\r\nconst priorityColorMapping = {\r\n  High: \"red\",\r\n  Medium: \"blue\",\r\n  Low: \"gray\",\r\n};\r\n\r\nexport default function Todo({ name, prioriry, completed, id }) {\r\n  const dispatch = useDispatch();\r\n  const [checked, setChecked] = useState(completed);\r\n\r\n  const toggleCheckbox = () => {\r\n    console.log(\"ok\");\r\n    setChecked(!checked);\r\n    dispatch(todoListSlice.actions.toggleTodo(id));\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      justify=\"space-between\"\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.5, textDecoration: \"line-through\" } : {}),\r\n      }}\r\n    >\r\n      <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n        {name}\r\n      </Checkbox>\r\n      <Tag color={priorityColorMapping[prioriry]} style={{ margin: 0 }}>\r\n        {prioriry}\r\n      </Tag>\r\n    </Row>\r\n  );\r\n}\r\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const searchTextSelector = (state) => state.filters.search;\nexport const filterStatusSelector = (state) => state.filters.status;\nexport const todoListSelector = (state) => state.todoList;\nexport const filterPriority = (state) => state.filters.priorities;\n\nexport const todosRemainingSelector = createSelector(\n  todoListSelector,\n  filterStatusSelector,\n  searchTextSelector,\n  filterPriority,\n  (todoList, status, searchText, priorities) => {\n    return todoList.filter((todo) => {\n      if (status === \"All\") {\n        return priorities.length\n          ? todo.name.includes(searchText) && priorities.includes(todo.priority)\n          : todo.name.includes(searchText);\n      }\n\n      return (\n        todo.name.includes(searchText) &&\n        (status === \"Completed\" ? todo.completed : !todo.completed) &&\n        (priorities.length ? priorities.includes(todo.priority) : true)\n      );\n    });\n  }\n);\n","import { Col, Row, Input, Button, Select, Tag } from \"antd\";\r\nimport Todo from \"../Todo\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { addTodo } from \"../../redux/actions\";\r\nimport { todosRemainingSelector } from \"../../redux/selector\";\r\nimport { v4 } from \"uuid\";\r\nimport { useState } from \"react\";\r\n\r\nimport todoListSlice from \"./TodosSlice\";\r\nexport default function TodoList() {\r\n  const [todoName, setTodoName] = useState(\"\");\r\n  const [todoPriority, setPriority] = useState(\"Medium\");\r\n\r\n  const todoList = useSelector(todosRemainingSelector);\r\n  const handleInputChange = (e) => {\r\n    setTodoName(e.target.value);\r\n  };\r\n  const handleAddButtonSelect = (value) => {\r\n    setPriority(value);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const handleAddButtonClick = () => {\r\n    setTodoName(\"\");\r\n    //dispath\r\n    dispatch(\r\n      todoListSlice.actions.addTodo({\r\n        id: v4(),\r\n        name: todoName,\r\n        priority: todoPriority,\r\n        completed: false,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <Row style={{ height: \"calc(100% - 40px)\" }}>\r\n      <Col span={24}>\r\n        <Input.Group style={{ display: \"flex\" }} compact>\r\n          <Input value={todoName} onChange={handleInputChange} />\r\n          <Select\r\n            defaultValue=\"Medium\"\r\n            value={todoPriority}\r\n            onChange={handleAddButtonSelect}\r\n          >\r\n            <Select.Option value=\"High\" label=\"High\">\r\n              <Tag color=\"red\">High</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Medium\" label=\"Medium\">\r\n              <Tag color=\"blue\">Medium</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Low\" label=\"Low\">\r\n              <Tag color=\"gray\">Low</Tag>\r\n            </Select.Option>\r\n          </Select>\r\n          <Button type=\"primary\" onClick={handleAddButtonClick}>\r\n            Add\r\n          </Button>\r\n        </Input.Group>\r\n      </Col>\r\n      <Col span={24} style={{ height: \"calc(100% - 40px)\", overflowY: \"auto\" }}>\r\n        {todoList.map((item) => (\r\n          <Todo\r\n            id={item.id}\r\n            key={item.id}\r\n            name={item.name}\r\n            prioriry={item.priority}\r\n            completed={item.completed}\r\n          />\r\n        ))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Col, Row, Input, Typography, Radio, Select, Tag } from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//   searchFilterChange,\r\n//   searchFilterByStatus,\r\n//   priorityFilter,\r\n// } from \"../../redux/actions\";\r\nimport FiltersSlice from \"./FiltersSlice\";\r\nconst { Search } = Input;\r\nexport default function Filters() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [filterStatus, setfilterStatus] = useState(\"All\");\r\n  const [filterPriority, setFilterPriority] = useState([]);\r\n\r\n  const inputTextSearch = (e) => {\r\n    setSearchText(e.target.value);\r\n    dispatch(FiltersSlice.actions.searchFilterChange(e.target.value));\r\n  };\r\n\r\n  const handleSelectedStatus = (e) => {\r\n    setfilterStatus(e.target.value);\r\n    console.log(\"filterStatus\", filterStatus);\r\n    dispatch(FiltersSlice.actions.searchFilterByStatus(e.target.value));\r\n  };\r\n  const handlePriority = (value) => {\r\n    setFilterPriority(value);\r\n    dispatch(FiltersSlice.actions.priorityFilter(value));\r\n  };\r\n\r\n  return (\r\n    <Row justify=\"center\">\r\n      <Col span={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Search\r\n        </Typography.Paragraph>\r\n        <Search\r\n          value={searchText}\r\n          placeholder=\"input search text\"\r\n          onChange={inputTextSearch}\r\n        />\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Status\r\n        </Typography.Paragraph>\r\n        <Radio.Group value={filterStatus} onChange={handleSelectedStatus}>\r\n          <Radio value=\"All\">All</Radio>\r\n          <Radio value=\"Completed\">Completed</Radio>\r\n          <Radio value=\"Todo\">To do</Radio>\r\n        </Radio.Group>\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Priority\r\n        </Typography.Paragraph>\r\n        <Select\r\n          value={filterPriority}\r\n          onChange={handlePriority}\r\n          mode=\"multiple\"\r\n          allowClear\r\n          placeholder=\"Please select\"\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          <Select.Option value=\"High\" label=\"High\">\r\n            <Tag color=\"red\">High</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Medium\" label=\"Medium\">\r\n            <Tag color=\"blue\">Medium</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Low\" label=\"Low\">\r\n            <Tag color=\"gray\">Low</Tag>\r\n          </Select.Option>\r\n        </Select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Typography, Divider } from \"antd\";\nimport \"./App.css\";\nimport TodoList from \"./components/TodoList\";\nimport Filters from \"./components/Filters\";\n\nconst { Title } = Typography;\n\nfunction App() {\n  return (\n    <div\n      style={{\n        width: 500,\n        margin: \"0 auto\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundColor: \"white\",\n        padding: 20,\n        boxShadow: \"0 0 10px 4px #bfbfbf\",\n        borderRadius: 5,\n        height: \"90vh\",\n      }}\n    >\n      <Title\n        style={{ textAlign: \"center\", color: \"#ba8fff\", fontSize: \"20px\" }}\n      >\n        Today Tasks\n      </Title>\n      <Filters />\n      <Divider />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}